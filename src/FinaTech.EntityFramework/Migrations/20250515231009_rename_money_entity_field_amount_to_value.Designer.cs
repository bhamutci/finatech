// <auto-generated />
using System;
using FinaTech.EntityFramework.PostgresSqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinaTech.EntityFramework.Migrations
{
    [DbContext(typeof(FinaTechPostgresSqlDbContext))]
    [Migration("20250515231009_rename_money_entity_field_amount_to_value")]
    partial class rename_money_entity_field_amount_to_value
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinaTech.Core.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<string>("Bic")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("character varying(34)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber");

                    b.HasIndex("AddressId");

                    b.HasIndex("Bic");

                    b.HasIndex("Iban");

                    b.HasIndex("Name");

                    b.ToTable("Accounts", (string)null);
                });

            modelBuilder.Entity("FinaTech.Core.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("AddressLine1");

                    b.HasIndex("City");

                    b.HasIndex("CountryCode");

                    b.HasIndex("PostCode");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("FinaTech.Core.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BeneficiaryAccountId")
                        .HasColumnType("integer");

                    b.Property<int>("ChargesBearer")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Details")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("OriginatorAccountId")
                        .HasColumnType("integer");

                    b.Property<string>("ReferenceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiaryAccountId");

                    b.HasIndex("OriginatorAccountId");

                    b.HasIndex("ReferenceNumber");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("FinaTech.Core.Account", b =>
                {
                    b.HasOne("FinaTech.Core.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("FinaTech.Core.Payment", b =>
                {
                    b.HasOne("FinaTech.Core.Account", "BeneficiaryAccount")
                        .WithMany()
                        .HasForeignKey("BeneficiaryAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinaTech.Core.Account", "OriginatorAccount")
                        .WithMany()
                        .HasForeignKey("OriginatorAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FinaTech.Core.Money", "Amount", b1 =>
                        {
                            b1.Property<int>("PaymentId")
                                .HasColumnType("integer");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("character varying(2)");

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric");

                            b1.HasKey("PaymentId");

                            b1.ToTable("Payments");

                            b1.WithOwner()
                                .HasForeignKey("PaymentId");
                        });

                    b.Navigation("Amount")
                        .IsRequired();

                    b.Navigation("BeneficiaryAccount");

                    b.Navigation("OriginatorAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
